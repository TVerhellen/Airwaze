
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.Extensions.Logging
@using Blazor.Extensions; 
@using Blazor.Extensions.Canvas
@using Blazor.Extensions.Canvas.Canvas2D;
@using Microsoft.AspNetCore.Mvc.TagHelpers;
@using Microsoft.JSInterop
@using BrowserInterop.Extensions
@using BrowserInterop.Geolocation   
@inject ILogger<Canvasformap> Logger
@inject IJSRuntime jsRuntime


<h1>Klik op areas voor mee info</h1>
<section class="page-section">
            <div class="container">
                <div class="product-item">
                    @if (selectedService != 0)
            {
                <div class="product-item-title d-flex" style="width:200px;margin-left:900px;">
                    <div class="bg-faded p-5 d-flex ms-auto rounded">
                        @switch (@selectedService)
                        {
                            case 1:
                                <span class="section-heading-upper">Gate 1 - 4</span>
                                <div style="margin-bottom:10px">
                                    <img src="Images/gates.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancegang.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 2:
                                <span class="section-heading-upper">Gate 5 - 8</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/gates.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancegang.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 3:
                                <span class="section-heading-upper">Gate 9 - 12</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/gates.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancegang.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 4:
                                <span class="section-heading-upper">Gate 13 - 16</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/gates.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancegang.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 5:
                                <span class="section-heading-upper">Gate 17 - 20</span>
                                <div style="margin-gatesop:10px;margin-bottom:10px">
                                    <img src="Images/gates.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancegang.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 6:
                                <span class="section-heading-upper">BurgerKing</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/burgerking.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                   <span class="section-heading-lower">@distancestation.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 7:
                                <span class="section-heading-upper">TaxFreeShop</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/Dutyfree.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancewhitehouse.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            default:
                                break;
                        }                            
                    </div>
                </div>
            }
            <div class="haraldcontainer" style="margin-left:200px;">
                    <div @onmousedown="ReportPointerLocation">
                        <BECanvas Width="600" Height="800" @ref="_canvasReference" >   
                        </BECanvas>
                    </div>
                </div>
                @if (selectedService != 0)
            {
                <div class="product-item-description d-flex me-auto">
                    <div class="bg-faded p-5 rounded">
                        @switch (@selectedService)
                        {
                            case 1:
                                <span class="section-heading-upper">Gate 1 - 4</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/gates.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancegang.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 2:
                                <span class="section-heading-upper">Gate 5 - 8</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/gates.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancegang.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 3:
                                <span class="section-heading-upper">Gate 9 - 12</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/gates.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancegang.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 4:
                                <span class="section-heading-upper">Gate 13 - 16</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/gates.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancegang.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 5:
                                <span class="section-heading-upper">Gate 17 - 20</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/gates.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower"@distancegang.ToString("0,00"); m distance from your current position></span>
                                </h2>
                                break;
                            case 6:
                                <span class="section-heading-upper">BurgerKing</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/burgerking.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancestation.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            case 7:
                                <span class="section-heading-upper">TaxFreeShop</span>
                                <div style="margin-top:10px;margin-bottom:10px">
                                    <img src="Images/Dutyfree.jpg" alt="Sample Image" width="100" height="50"/>
                                </div>
                                <h2 class="section-heading mb-0">                                   
                                    <span class="section-heading-lower">@distancewhitehouse.ToString("0,00"); m distance from your current position</span>
                                </h2>
                                break;
                            default:
                                break;
                        }              
                    </div>
                </div>
            }
        </div>
            </div>
        </section>


<p>@mousePointerMessage</p>


 <button class="btn btn-primary" @onclick="GetGeolocation">Get Current Position</button>

@if(currentPosition != null){
   <div>
<p>Current position : </p>
        <ul>
           
Latitude : @currentPosition.Coords.Latitude
            <li>Longitude : @currentPosition.Coords.Longitude </li>
            <li>Altitude : @currentPosition.Coords.Altitude </li>
            <li>Accuracy : @currentPosition.Coords.Accuracy </li>
            <li>Altitude Accuracy : @currentPosition.Coords.AltitudeAccuracy </li>
            <li>Heading : @currentPosition.Coords.Heading </li>
            <li>Speed : @currentPosition.Coords.Speed </li>
        </ul>
    </div>
}

@code {
    private int selectedService = 0;

    private WindowNavigatorGeolocation geolocationWrapper;
    private GeolocationPosition currentPosition;
    private List<GeolocationResult> positioHistory = new List<GeolocationResult>();
    private Canvas2DContext _context;
    protected BECanvasComponent _canvasReference;
    private string? mousePointerMessage; 
    private double distancestation;
    private double distancegang;
    private double distancewhitehouse;
    private static System.Timers.Timer thisTimer;
    private int counter = 0;

    //specific doubles for sintNiklaas
    //private double stationlon = 4.144092;
    //private double stationlat = 51.171666;
    //private double ganglon = 4.140948;
    //private double ganglat = 51.170052;
    //private double whitehouselon = -77.036533;
    //private double whitehouselat = 38.897668;

    //specific doubles for Wondelgem  //VS ALDI-fietkot-PITTA

    private double stationlon = 3.717714;
    private double stationlat = 51.084001;
    private double ganglon = 3.711019;
    private double ganglat = 51.083220;
    private double whitehouselon = 3.716733;
    private double whitehouselat = 51.080390;


    protected override async Task OnInitializedAsync()
    {
        var window = await jsRuntime.Window();
        var navigator = await window.Navigator();
        geolocationWrapper = navigator.Geolocation;
        await StartTimer();
    }

    public async Task StartTimer()
    {

        await GetGeolocation();
        thisTimer = new System.Timers.Timer(1000);
        thisTimer.Elapsed += CountDownTimer;
        thisTimer.Enabled = true;

    }

    public void CountDownTimer(Object source, System.Timers.ElapsedEventArgs e)
    {
        if (counter % 5 == 0 || counter > 5)
        {                
            counter += 1;
            GetGeolocation();  

        }        
        InvokeAsync(StateHasChanged);
    }

    public async Task GetGeolocation()
    {
        int x;
        int y;
        currentPosition = (await geolocationWrapper.GetCurrentPosition(new PositionOptions()
        {
            EnableHighAccuracy = true,
            MaximumAgeTimeSpan = TimeSpan.FromHours(1),
            TimeoutTimeSpan = TimeSpan.FromMinutes(1)
        })).Location;
        this._context = await this._canvasReference.CreateCanvas2DAsync();
        if (currentPosition.Coords.Latitude < 51.084944 && currentPosition.Coords.Latitude > 51.0802263 && currentPosition.Coords.Longitude < 3.719737 && currentPosition.Coords.Longitude > 3.709195)
        {
            x = (int)Math.Round(((51.084944 - currentPosition.Coords.Latitude / 800) /  0.00001757)/10000);
            y =  (int)Math.Round(((3.719737 - currentPosition.Coords.Longitude / 600) / 0.000005897125)/1000);
             await this._context.SetFillStyleAsync("black");      
            await this._context.FillRectAsync(x, y, 20, 20);
            await this._context.SetFontAsync("46px Calibri");
            await this._context.StrokeTextAsync("Hier ben Ik", x, y);
        }       
    }

    private async Task ReportPointerLocation(MouseEventArgs e)
    {
        mousePointerMessage = $"Mouse coordinates: {e.OffsetX}:{e.OffsetY}";
        if (330 < e.OffsetX && 360 > e.OffsetX && 54 < e.OffsetY && 90 > e.OffsetY)
        {
            selectedService = 1;
        }
        else if (547 < e.OffsetX && 578 > e.OffsetX && 49 < e.OffsetY && 90 > e.OffsetY)
        {
            selectedService = 2;
        }
        else if (321 < e.OffsetX && 351 > e.OffsetX && 262 < e.OffsetY && 305 > e.OffsetY)
        {
            selectedService = 3;
        }
        else if (550 < e.OffsetX && 582 > e.OffsetX && 263 < e.OffsetY && 306 > e.OffsetY)
        {
            selectedService = 4;
        }
        else if (322 < e.OffsetX && 350 > e.OffsetX && 474 < e.OffsetY && 518 > e.OffsetY)
        {
            selectedService = 5;
        }
        else if (482 < e.OffsetX && 538 > e.OffsetX && 590 < e.OffsetY && 649 > e.OffsetY)
        {
            selectedService = 6;
        }
        else if (106 < e.OffsetX && 150 > e.OffsetX && 720 < e.OffsetY && 748 > e.OffsetY)
        {
            selectedService = 7;
        }
        else
        {
            selectedService = 0;
        }
        this._context = await this._canvasReference.CreateCanvas2DAsync();
        await GetGeolocation();
        distancegang =  GetDistance(ganglon, ganglat);
        distancestation =  GetDistance(stationlon, stationlat);
        distancewhitehouse =  GetDistance(whitehouselon, whitehouselat);               
    }


    protected async Task OnRenderAsync(bool firstRender)
    {
        this._context = await this._canvasReference.CreateCanvas2DAsync();        
    }

    public static double Radians(double x)
    {
        double PIx = 3.141592653589793;
        return x * PIx / 180;
    }
    public static double DistanceBetweenPlaces(double lon1, double lat1, double lon2, double lat2)
    {
        double RADIUS = 6378.16;
        double dlon = Radians(lon2 - lon1);
        double dlat = Radians(lat2 - lat1);
        double a = (Math.Sin(dlat / 2) * Math.Sin(dlat / 2)) + Math.Cos(Radians(lat1)) * Math.Cos(Radians(lat2)) * (Math.Sin(dlon / 2) * Math.Sin(dlon / 2));
        double angle = 2 * Math.Atan2(Math.Sqrt(a), Math.Sqrt(1 - a));
        return angle * RADIUS;
    }

    
    public double GetDistance(double x, double y)
    {
        return DistanceBetweenPlaces(currentPosition.Coords.Longitude, currentPosition.Coords.Latitude, x, y) *1000;

    }
         
       
 }
